{
  "info": {
    "name": "LangCache Shadow Mode Troubleshooting",
    "description": "Comprehensive Postman collection for testing LangCache managed service and diagnosing shadow mode issues",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "langcache_base_url",
      "value": "https://api.langcache.com",
      "description": "LangCache managed service base URL"
    },
    {
      "key": "langcache_api_key",
      "value": "your-api-key-here",
      "description": "Your LangCache API key"
    },
    {
      "key": "cache_id",
      "value": "your-cache-id-here",
      "description": "Your cache instance ID"
    }
  ],
  "item": [
    {
      "name": "1. Health Check",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{langcache_api_key}}"
          },
          {
            "key": "Accept",
            "value": "application/json"
          },
          {
            "key": "Cache-Control",
            "value": "no-cache"
          },
          {
            "key": "Postman-Token",
            "value": "{{$guid}}"
          }
        ],
        "url": {
          "raw": "{{langcache_base_url}}/v1/caches/{{cache_id}}/health",
          "host": ["{{langcache_base_url}}"],
          "path": ["v1", "caches", "{{cache_id}}", "health"]
        },
        "description": "Test basic connectivity and authentication to LangCache service"
      },
      "response": []
    },
    {
      "name": "2. Search Empty Cache",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{langcache_api_key}}"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"prompt\": \"What is machine learning?\"\n}"
        },
        "url": {
          "raw": "{{langcache_base_url}}/v1/caches/{{cache_id}}/search",
          "host": ["{{langcache_base_url}}"],
          "path": ["v1", "caches", "{{cache_id}}", "search"]
        },
        "description": "Test search operation on potentially empty cache (should return empty array)"
      },
      "response": []
    },
    {
      "name": "3. Add Test Entry",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{langcache_api_key}}"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"prompt\": \"What is artificial intelligence?\",\n  \"response\": \"Artificial intelligence (AI) is the simulation of human intelligence in machines that are programmed to think and learn like humans.\",\n  \"attributes\": {\n    \"language\": \"en\",\n    \"category\": \"technology\",\n    \"source\": \"shadow-mode-test\"\n  },\n  \"scope\": {\n    \"applicationId\": \"shadow-mode-troubleshooting\",\n    \"userId\": \"test-user\"\n  },\n  \"ttlMillis\": 3600000\n}"
        },
        "url": {
          "raw": "{{langcache_base_url}}/v1/caches/{{cache_id}}/entries",
          "host": ["{{langcache_base_url}}"],
          "path": ["v1", "caches", "{{cache_id}}", "entries"]
        },
        "description": "Add a test entry to verify cache write operations work"
      },
      "response": []
    },
    {
      "name": "4. Search for Exact Match",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{langcache_api_key}}"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"prompt\": \"What is artificial intelligence?\",\n  \"attributes\": {\n    \"language\": \"en\"\n  },\n  \"scope\": {\n    \"applicationId\": \"shadow-mode-troubleshooting\",\n    \"userId\": \"test-user\"\n  }\n}"
        },
        "url": {
          "raw": "{{langcache_base_url}}/v1/caches/{{cache_id}}/search",
          "host": ["{{langcache_base_url}}"],
          "path": ["v1", "caches", "{{cache_id}}", "search"]
        },
        "description": "Search for the exact entry we just added (should return match with low distance)"
      },
      "response": []
    },
    {
      "name": "5. Search for Similar Query",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{langcache_api_key}}"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"prompt\": \"What is AI?\",\n  \"attributes\": {\n    \"language\": \"en\"\n  },\n  \"scope\": {\n    \"applicationId\": \"shadow-mode-troubleshooting\",\n    \"userId\": \"test-user\"\n  },\n  \"distanceThreshold\": 0.8\n}"
        },
        "url": {
          "raw": "{{langcache_base_url}}/v1/caches/{{cache_id}}/search",
          "host": ["{{langcache_base_url}}"],
          "path": ["v1", "caches", "{{cache_id}}", "search"]
        },
        "description": "Test semantic similarity matching with a related but different query"
      },
      "response": []
    },
    {
      "name": "6. Search with Strict Threshold",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{langcache_api_key}}"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"prompt\": \"How do I cook pasta?\",\n  \"distanceThreshold\": 0.1\n}"
        },
        "url": {
          "raw": "{{langcache_base_url}}/v1/caches/{{cache_id}}/search",
          "host": ["{{langcache_base_url}}"],
          "path": ["v1", "caches", "{{cache_id}}", "search"]
        },
        "description": "Test with unrelated query and strict threshold (should return empty)"
      },
      "response": []
    },
    {
      "name": "7. Add Shadow Mode Test Entry",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{langcache_api_key}}"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"prompt\": \"How do I reset my API key?\",\n  \"response\": \"To reset your API key, go to Settings > API Keys in your dashboard, click on the key you want to reset, and select 'Regenerate Key'.\",\n  \"attributes\": {\n    \"language\": \"en\",\n    \"category\": \"support\",\n    \"source\": \"shadow-mode-test\"\n  },\n  \"scope\": {\n    \"applicationId\": \"shadow-mode-troubleshooting\",\n    \"userId\": \"test-user\"\n  }\n}"
        },
        "url": {
          "raw": "{{langcache_base_url}}/v1/caches/{{cache_id}}/entries",
          "host": ["{{langcache_base_url}}"],
          "path": ["v1", "caches", "{{cache_id}}", "entries"]
        },
        "description": "Add an entry that simulates typical shadow mode scenarios"
      },
      "response": []
    },
    {
      "name": "8. Test Shadow Mode Scenario",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{langcache_api_key}}"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"prompt\": \"How can I regenerate my API key?\",\n  \"attributes\": {\n    \"language\": \"en\"\n  },\n  \"scope\": {\n    \"applicationId\": \"shadow-mode-troubleshooting\",\n    \"userId\": \"test-user\"\n  }\n}"
        },
        "url": {
          "raw": "{{langcache_base_url}}/v1/caches/{{cache_id}}/search",
          "host": ["{{langcache_base_url}}"],
          "path": ["v1", "caches", "{{cache_id}}", "search"]
        },
        "description": "Test semantic matching for shadow mode analysis (similar to previous entry)"
      },
      "response": []
    },
    {
      "name": "9. Bulk Add for Testing",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{langcache_api_key}}"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"prompt\": \"What is machine learning?\",\n  \"response\": \"Machine learning is a subset of artificial intelligence that enables computers to learn and improve from experience without being explicitly programmed.\",\n  \"attributes\": {\n    \"language\": \"en\",\n    \"category\": \"technology\"\n  }\n}"
        },
        "url": {
          "raw": "{{langcache_base_url}}/v1/caches/{{cache_id}}/entries",
          "host": ["{{langcache_base_url}}"],
          "path": ["v1", "caches", "{{cache_id}}", "entries"]
        },
        "description": "Add another entry to build up cache for testing"
      },
      "response": []
    },
    {
      "name": "10. Test Error Handling - Invalid Cache ID",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{langcache_api_key}}"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{langcache_base_url}}/v1/caches/invalid-cache-id/health",
          "host": ["{{langcache_base_url}}"],
          "path": ["v1", "caches", "invalid-cache-id", "health"]
        },
        "description": "Test error handling with invalid cache ID (should return 404)"
      },
      "response": []
    },
    {
      "name": "11. Test Error Handling - Invalid API Key",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer invalid-api-key"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{langcache_base_url}}/v1/caches/{{cache_id}}/health",
          "host": ["{{langcache_base_url}}"],
          "path": ["v1", "caches", "{{cache_id}}", "health"]
        },
        "description": "Test error handling with invalid API key (should return 401)"
      },
      "response": []
    },
    {
      "name": "12. Test Malformed Request",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{langcache_api_key}}"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"invalid_field\": \"test\"\n}"
        },
        "url": {
          "raw": "{{langcache_base_url}}/v1/caches/{{cache_id}}/search",
          "host": ["{{langcache_base_url}}"],
          "path": ["v1", "caches", "{{cache_id}}", "search"]
        },
        "description": "Test error handling with malformed request (should return 400)"
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Validate required variables are set",
          "if (!pm.collectionVariables.get('langcache_api_key') || pm.collectionVariables.get('langcache_api_key') === 'your-api-key-here') {",
          "    console.log('⚠️ Please set your langcache_api_key in collection variables');",
          "}",
          "",
          "if (!pm.collectionVariables.get('cache_id') || pm.collectionVariables.get('cache_id') === 'your-cache-id-here') {",
          "    console.log('⚠️ Please set your cache_id in collection variables');",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Common test assertions",
          "pm.test('Response time is reasonable', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "pm.test('Response has correct content type', function () {",
          "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
          "});",
          "",
          "// Log response for debugging",
          "console.log('Response Status:', pm.response.status);",
          "console.log('Response Body:', pm.response.text());"
        ]
      }
    }
  ]
}
